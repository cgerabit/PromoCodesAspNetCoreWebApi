// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PromoCodesAspNetCoreWebApi.Persistence.PromoCodesAspNetCoreWebApiDb;

namespace PromoCodesAspNetCoreWebApi.Persistence.Migrations
{
    [DbContext(typeof(PromoCodesAspNetCoreWebApiDbContext))]
    [Migration("20210423193212_FlexibilityAddedToBonusFeature")]
    partial class FlexibilityAddedToBonusFeature
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PromoCodesAspNetCoreWebApi.Domain.Entities.Bonus", b =>
                {
                    b.Property<int>("BonusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("ActivationDateTimeOffset")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("BonusId");

                    b.HasIndex("PromoCodeId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Bonus");

                    b.HasData(
                        new
                        {
                            BonusId = 1,
                            Amount = 12.3m,
                            ServiceId = 1,
                            UserId = 1
                        },
                        new
                        {
                            BonusId = 2,
                            Amount = 23.4m,
                            ServiceId = 4,
                            UserId = 1
                        },
                        new
                        {
                            BonusId = 3,
                            Amount = 45.6m,
                            ServiceId = 7,
                            UserId = 1
                        },
                        new
                        {
                            BonusId = 4,
                            Amount = 56.7m,
                            ServiceId = 10,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("PromoCodesAspNetCoreWebApi.Domain.Entities.PromoCode", b =>
                {
                    b.Property<int>("PromoCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PromoCodeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("PromoCode");

                    b.HasData(
                        new
                        {
                            PromoCodeId = 1,
                            Amount = 0m,
                            Name = "promo-code-1"
                        },
                        new
                        {
                            PromoCodeId = 2,
                            Amount = 0m,
                            Name = "promo-code-2"
                        },
                        new
                        {
                            PromoCodeId = 3,
                            Amount = 0m,
                            Name = "promo-code-3"
                        },
                        new
                        {
                            PromoCodeId = 4,
                            Amount = 0m,
                            Name = "promo-code-4"
                        },
                        new
                        {
                            PromoCodeId = 5,
                            Amount = 0m,
                            Name = "promo-code-5"
                        },
                        new
                        {
                            PromoCodeId = 6,
                            Amount = 0m,
                            Name = "promo-code-6"
                        });
                });

            modelBuilder.Entity("PromoCodesAspNetCoreWebApi.Domain.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ServiceId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            Name = "Service 1"
                        },
                        new
                        {
                            ServiceId = 2,
                            Name = "Service 2"
                        },
                        new
                        {
                            ServiceId = 3,
                            Name = "Service 3"
                        },
                        new
                        {
                            ServiceId = 4,
                            Name = "Service 4"
                        },
                        new
                        {
                            ServiceId = 5,
                            Name = "Service 5"
                        },
                        new
                        {
                            ServiceId = 6,
                            Name = "Service 6"
                        },
                        new
                        {
                            ServiceId = 7,
                            Name = "Service 7"
                        },
                        new
                        {
                            ServiceId = 8,
                            Name = "Service 8"
                        },
                        new
                        {
                            ServiceId = 9,
                            Name = "Service 9"
                        },
                        new
                        {
                            ServiceId = 10,
                            Name = "Service 10"
                        },
                        new
                        {
                            ServiceId = 11,
                            Name = "Service 11"
                        },
                        new
                        {
                            ServiceId = 12,
                            Name = "Service 12"
                        },
                        new
                        {
                            ServiceId = 13,
                            Name = "Service 13"
                        });
                });

            modelBuilder.Entity("PromoCodesAspNetCoreWebApi.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHashToBase64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            EmailAddress = "user1@example.com",
                            PasswordHashToBase64 = "vzPpKDsZCudRgRhmIGQdq8F0TFIkjBynvl935RCMy1I="
                        },
                        new
                        {
                            UserId = 2,
                            EmailAddress = "user2@example.com",
                            PasswordHashToBase64 = "B8Z3ujhmjbX5A3sBJbChHOtYkfP7jmdIu6WkxvUkJD0="
                        },
                        new
                        {
                            UserId = 3,
                            EmailAddress = "user3@example.com",
                            PasswordHashToBase64 = "8sjNudBiNzbUY9C23oDdel/rQ/bp4dXnmlVA12IOZeE="
                        });
                });

            modelBuilder.Entity("PromoCodesAspNetCoreWebApi.Domain.Entities.Bonus", b =>
                {
                    b.HasOne("PromoCodesAspNetCoreWebApi.Domain.Entities.PromoCode", "PromoCode")
                        .WithMany()
                        .HasForeignKey("PromoCodeId");

                    b.HasOne("PromoCodesAspNetCoreWebApi.Domain.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PromoCodesAspNetCoreWebApi.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PromoCode");

                    b.Navigation("Service");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
